;;-----------------------------------------------------------------------------
;; Bindkeys for 'Schematics'
;; Inherited by:
;;             * PcellIDE Schematic
;;             * Power Manager
;;             * Schematics XL
;;             * adegxl-schematic
;;             * adexl-schematic
;;             * assembler-schematic
;;             * explorer-schematic
;;-----------------------------------------------------------------------------
hiSetBindKeys( "Schematics" list(
    list("<Btn4Down>(2)"	"geScroll(nil \"n\" nil)")
    list("<Btn5Down>(2)"	"geScroll(nil \"s\" nil)")
    list("<DrawThru1>"	"geSingleSelectBox()"	"geSingleSelectBox()")
    list("<DrawThru2>"	"hiDynamicPanGrabbing()"	"hiDynamicPanGrabbing()")
    list("<DrawThru3>"	"hiZoomIn()"	"hiZoomIn()")
    list("<Key>%"	"MSTseCreateMstNote()")
    list("<Key>&"	"MSTseMstNotesBrowserNew()")
    list("<Key>'"	"hiUpdateMagOptions()")
    list("<Key>("	"MSittsimUTProbeNet( \"add\")")
    list("<Key>)"	"MSittsimUTProbeNet( \"delete\")")
    list("<Key>,"	"MSddsHiMakeReadOnly()")
    list("<Key>-"	"MSlePlusMinus(\"decrease\" \"row\")"	"MSlePlusMinus(\"decrease\" \"row\")")
    list("<Key>."	"hiFocusToCIW(hiGetCurrentWindow())")
    list("<Key>/"	"MTgeCadenceWindowChooser()")
    list("<Key>0"	"geDeleteNetProbe()")
    list("<Key>1"	"hiZoomRelativeScale(hiGetCurrentWindow() 0.5)")
    list("<Key>2"	"hiZoomRelativeScale(hiGetCurrentWindow() 2.0)")
    list("<Key>3"	"MThiDimToggle()")
    list("<Key>4"	"MShiToggleLayerVisibility(\"instance\")")
    list("<Key>5"	"MSsimInitEnv()")
    list("<Key>6"	"simEditFile()")
    list("<Key>7"	"MSnewSimPage()")
    list("<Key>8"	"MSsimWaveOpen()")
    list("<Key>9"	"MSseProbe()")
    list("<Key><"	"MTgeShowLockedCellViews()")
    list("<Key>="	"MSlePlusMinus(\"increase\" \"row\")"	"MSlePlusMinus(\"increase\" \"row\")")
    list("<Key>A"	"geSingleSelectPoint()")
    list("<Key>B"	"MSgeAscend(-1 \"READ\")")
  list("None<Btn8Down>"	"MSgeDescend(\"READ\")")
  list("None<Btn9Down>"	"MSgeAscend(-1 \"READ\")")	
    list("<Key>BackSpace"	"schHiDelete()"	"deletePoint()")
    list("<Key>C"	"schHiCopy()")
    list("<Key>D"	"geSubSelectPoint()")
    list("<Key>Delete"	"schHiDelete()")
    list("<Key>Down"	"geScroll(nil \"s\" nil)")
    list("<Key>E"	"MSgeDescend(\"READ\")")
    list("<Key>Escape"	""	"cancelEnterFun()")
    list("<Key>F"	"hiZoomAbsoluteScale(hiGetCurrentWindow() 0.9)")
    list("<Key>F1"	"hiHelp('window deGetAppInfo(deGetEditViewType(hiGetCurrentWindow()))->appName)")
    list("<Key>F11"	"deToggleAssistants()")
    list("<Key>F3"	""	"hiToggleEnterForm()")
    list("<Key>F4"	"geTogglePartialSelect()")
    list("<Key>F5"	"schHiFindMarker()")
    list("<Key>F6"	"hiRedraw()")
    list("<Key>F9"	"MSTprobeSelectedNets(nil)")
    list("<Key>G"	"hiRedraw()")
    list("<Key>H"	"schHiHiliteLabel(\"wire\" \"on\")")
    list("<Key>I"	"schHiCreateInst()")
    list("<Key>J"	"MSgeFanoutObj()")
    list("<Key>K"	"MSleHiRuler()")
    list("<Key>KP_1"	"geScroll(nil \"sw\" nil)")
    list("<Key>KP_3"	"geScroll(nil \"se\" nil)")
    list("<Key>KP_5"	"geScroll(nil \"\" nil)")
    list("<Key>KP_7"	"geScroll(nil \"nw\" nil)")
    list("<Key>KP_9"	"geScroll(nil \"ne\" nil)")
    list("<Key>KP_Begin"	"geScroll(nil \"\" nil)")
    list("<Key>KP_End"	"geScroll(nil \"sw\" nil)")
    list("<Key>KP_Home"	"geScroll(nil \"nw\" nil)")
    list("<Key>KP_Page_Down"	"geScroll(nil \"se\" nil)")
    list("<Key>KP_Page_Up"	"geScroll(nil \"ne\" nil)")
    list("<Key>L"	"schHiCreateWireLabel()")
    list("<Key>L10"	"hiResizeWindow(hiGetCurrentWindow() list(166:10 1063:465))")
    list("<Key>L8"	"hiResizeWindow(hiGetCurrentWindow() list(166:10 1063:665))")
    list("<Key>Left"	"geScroll(nil \"w\" nil)")
    list("<Key>M"	"schHiMove()")
    list("<Key>N"	"schHiCreateNoteShape()")
    list("<Key>O"	"schHiDisplayOptions()")
    list("<Key>P"	"hiPan()")
    list("<Key>Q"	"MSgeHiEditProp()"	"schHiObjectProperty()")
    list("<Key>R"	"schHiReplace()"	"schSetEnv(\"rotate\" t)")
    list("<Key>Right"	"geScroll(nil \"e\" nil)")
    list("<Key>S"	"schHiStretch()"	"schSnapToConn()")
    list("<Key>T"	"schHiEditText()")
    list("<Key>Tab"	"leToggleMagnifier()"	"hiToggleEnterForm()")
    list("<Key>U"	"hiUndo()")
    list("<Key>Up"	"geScroll(nil \"n\" nil)")
    list("<Key>V"	"hiPrevWinView(getCurrentWindow())")
    list("<Key>W"	"schHiCreateWire(0.0)")
    list("<Key>X"	"MSschCheckCV()")
    list("<Key>Z"	"hiZoomIn()")
    list("<Key>["	"hiZoomRelativeScale(getCurrentWindow() 0.8)")
    list("<Key>]"	"hiZoomRelativeScale(getCurrentWindow() 1.25)")
    list("<Key>^"	"MSTseConvertMstNote()")
    list("<Key>`"	"MSTseSetAsMstNotes()")
    list("<Key>backslash"	"MSseToggleNetSetSupplyConns()"	"MSseToggleNetSetSupplyConns()")
    list("<Key>space"	"MTgeSetSchLayersSelectable()")
  list("None<Btn6Down>"	"geScroll(nil \"e\" nil)")
  list("None<Btn7Down>"	"geScroll(nil \"w\" nil)")
  list("None<Btn2Down>"	"MSsimWaveOpen()")
    list("Alt<Btn5Down>"	"geScroll(nil \"w\" nil)")
    list("Alt<Btn5Down>(2)"	"geScroll(nil \"w\" nil)")
    list("Alt<Key>-"	"MSlePlusMinus(\"decrease\" \"column\" \"space\")"	"MSlePlusMinus(\"decrease\" \"column\" \"space\")")
    list("Alt<Key>0"	"MSseWireSymbol(?wireType \"pin\")")
    list("Alt<Key>1"	"geAddNetProbe()->probeDisplayStyle=\"flight\"")
    list("Alt<Key>2"	"MSTschlxUseCellcheckParams()")
    list("Alt<Key>3"	"MShiToggleLayerVisibility(\"wire\")")
    list("Alt<Key>4"	"MSseProbe(?shortDevs t)")
    list("Alt<Key>5"	"MSTdelCelllxUseCellByCell()")
    list("Alt<Key>6"	"MSTseChangeSwitchLayer(\"m2\")")
    list("Alt<Key>8"	"MSseWireSymbol(?wireType \"pin\" ?side \"left\")")
    list("Alt<Key>9"	"MSTseProbeCnAnalysis()")
    list("Alt<Key>="	"MSlePlusMinus(\"increase\" \"column\" \"space\")"	"MSlePlusMinus(\"increase\" \"column\" \"space\")")
    list("Alt<Key>A"	"MSseProbe(?shortDevs t)")
    list("Alt<Key>B"	"MSgeAscend(-1 \"EDIT\")")
    list("Alt<Key>C"	"MSTpinDirectionChange()")
    list("Alt<Key>D"	"MSwaProbeNetWaveform(\"delete\" nil 't)")
    list("Alt<Key>E"	"MSgeDescend(\"RIP\")")
    list("Alt<Key>F"	"if(boundp('schSchSelectForm) then if(schSchSelectForm->instAllNone->all->value == nil then MSschSetSelectOptions(?instAll t)                                                 else MSschSetSelectOptions(?instAll nil) MSschSetSelectOptions(?instancePin t)) else schSetSelectOptions())")
    list("Alt<Key>F7"	"geHiExplainMarker()")
    list("Alt<Key>G"	"MSseDeleteProbe()")
    list("Alt<Key>H"	"cid = ipcBeginProcess(\"xclip -selection clipboard -o\") ipcWait(cid 5 10)  MTschDescendToPathString() _MT_DESCENDTOPATH_FORM->hierPath->value=ipcReadProcess(cid)  hiFormDone(_MT_DESCENDTOPATH_FORM)  ipcKillProcess(cid)")
    list("Alt<Key>I"	"MTleUnSetInstMatchPoint()")
    list("Alt<Key>J"	"MSgeFanoutCell()")
    list("Alt<Key>K"	"MSsiP2PRes()")
    list("Alt<Key>M"	"MTleUnSetMatchPoint()")
    list("Alt<Key>P"	"MST_seAutoCreateSelNetsPin()")
    list("Alt<Key>Q"	"hiEditPropList(car(geGetSelSet()))")
    list("Alt<Key>R"	"MSwaApplyToAllProbes(\"delete\")")
    list("Alt<Key>S"	"hiRegTimer(\"schSchFindForm->schFindZoomButton->value =  t\" 1) schHiFind()")
    list("Alt<Key>T"	"MSwaProbeTerm(\"add\")")
    list("Alt<Key>U"	"MSmeLoadUserEnv()")
    list("Alt<Key>W"	"unless(fboundp('MSmeIsCellViewReadOnly) && MSmeIsCellViewReadOnly(geGetEditCellView()) MTgeChangeEditMode(\"a\"))")
    list("Alt<Key>X"	"MSwaProbeTerm(\"delete\")")
    list("Alt<Key>`"	"MSTseNotesToggleByTitle()")
    list("Ctrl Alt<Btn2Down>"	"MSseProbe(?shortDevs t)")
    list("Ctrl Alt<Btn3Down>"	"if(hiGetCIWindow()->infix then MSTittsimUTProbeBusNets(\"add\") else hiGetCIWindow()->infix=t errset(MSTittsimUTProbeBusNets(\"add\") t) hiGetCIWindow()->infix=nil)")
    list("Ctrl Alt<Key>-"	"MSlePlusMinus(\"decrease\" \"row\" \"space\")"	"MSlePlusMinus(\"decrease\" \"row\" \"space\")")
    list("Ctrl Alt<Key>8"	"MSgeCreatePinsFromNets(\"input\")")
    list("Ctrl Alt<Key>9"	"MSgeCreatePinsFromNets(\"output\")")
    list("Ctrl Alt<Key>="	"MSlePlusMinus(\"increase\" \"row\" \"space\")"	"MSlePlusMinus(\"increase\" \"row\" \"space\")")
    list("Ctrl Alt<Key>A"	"MSseProbe(?shortDevs t)")
    list("Ctrl Alt<Key>B"	"MSgeHierarchyJump()")
    list("Ctrl Alt<Key>C"	"hiCloseWindow(hiGetCurrentWindow())")
    list("Ctrl Alt<Key>D"	"MSseDeleteProbe(?shortDevs t)")
    list("Ctrl Alt<Key>E"	"MSschToggleEnv(\"descendTarget\" list(\"use viewNameList\" \"query user\"))")
    list("Ctrl Alt<Key>F1"	"MSTlxMapZoomSelInWindow()")
    list("Ctrl Alt<Key>F2"	"MSTlxMapGetFromWindow()")
    list("Ctrl Alt<Key>G"	"MSseDeleteProbe(?shortDevs t)")
    list("Ctrl Alt<Key>I"	"MSdbClearMatchPointHilite()")
    list("Ctrl Alt<Key>J"	"MSgeFanoutNetC()")
    list("Ctrl Alt<Key>P"	"MSgeProbe()")
    list("Ctrl Alt<Key>Q"	"MTdbComment()")
    list("Ctrl Alt<Key>R"	"MTgeChangeEditMode(\"r\")")
    list("Ctrl Alt<Key>S"	"MSTseCommentSaveFormDisplay()")
    list("Ctrl Alt<Key>T"	"MSsiUnprobeTerm()")
    list("Ctrl Alt<key>F9"	"MSTprobeSelectedNets(t)")
    list("Ctrl Alt<Key>O"	"deBack()")
    list("Ctrl Alt<Key>I"	"deForward()")
    list("Ctrl Shift<Btn1Down>"	"hiZoomInMagnifier(hiGetCurrentWindow())")
    list("Ctrl Shift<Btn2Down>"	"hiZoomOutMagnifier(hiGetCurrentWindow())")
    list("Ctrl Shift<Btn4Down>"	"hiScaleMagnifier(1.25)")
    list("Ctrl Shift<Btn5Down>"	"hiScaleMagnifier(0.80)")
    list("Ctrl Shift<Key>A"	"geSelectByLine()")
    list("Ctrl Shift<Key>Down"	"hiScaleMagnifier(0.80)")
    list("Ctrl Shift<Key>Up"	"hiScaleMagnifier(1.25)")
    list("Ctrl Shift<Key>Z"	"hiNextWinView(hiGetCurrentWindow())")
    list("Ctrl<Btn1Down>"	"mouseSubSelectPt()"	"mouseSubSelectPt()")
    list("Ctrl<Btn2Down>"	"MSseProbe(?shortDevs t)"	"MTleTraceNetBK(t)")
    list("Ctrl<Btn3Down>"	"if(hiGetCIWindow()->infix then MSwaProbeNetWaveform(\"add\") else hiGetCIWindow()->infix=t errset(MSwaProbeNetWaveform(\"add\") t) hiGetCIWindow()->infix=nil)")
    list("Ctrl<Btn4Down>"	"hiZoomWindowAtMouse(hiGetCurrentWindow() 0.5)")
    list("Ctrl<Btn5Down>"	"hiZoomWindowAtMouse(hiGetCurrentWindow() 1.75)"	"geScroll(nil \"n\" nil)")
    list("Ctrl<DrawThru1>"	"geSubSelectBox()"	"geSubSelectBox()")
    list("Ctrl<Key>-"	"MSlePlusMinus(\"decrease\" \"column\" \"width\")"	"MSlePlusMinus(\"decrease\" \"column\" \"width\")")
    list("Ctrl<Key>."	"MTleLayoutPilot()")
    list("Ctrl<Key>/"	"MTgeShowLockedCellViews()")
    list("Ctrl<Key>0"	"geDeleteAllProbe(getCurrentWindow() t)")
    list("Ctrl<Key>1"	"MST_layoutVsSchematicPins()")
    list("Ctrl<Key>8"	"MSseWireSymbol(?wireType \"label\" ?side \"left\")")
    list("Ctrl<Key>9"	"MSseWireSymbol(?wireType \"label\" ?side \"right\")")
    list("Ctrl<Key>="	"MSlePlusMinus(\"increase\" \"column\" \"width\")"	"MSlePlusMinus(\"increase\" \"column\" \"width\")")
    list("Ctrl<Key>A"	"geSelectAllFig()")
    list("Ctrl<Key>B"	"MSgeAscend()")
    list("Ctrl<Key>C"	"mgc_rve_end_enter_function_binding(\"Schematics\")")
    list("Ctrl<Key>D"	"geDeselectAllFig()")
    list("Ctrl<Key>Down"	"geScroll(nil \"s\" t)")
    list("Ctrl<Key>E"	"MSgeDescend(\"EIP\")")
    list("Ctrl<Key>F"	"hiGetCurrentWindow()->stopLevel = 0 if(hiGetCurrentWindow()->instLabel==\"master\" hiGetCurrentWindow()->instLabel=\"instance\" hiGetCurrentWindow()->instLabel=\"master\") ")
    list("Ctrl<Key>F11"	"deToggleToolbars()")
    list("Ctrl<Key>F7"	"geHiDeleteAllMarker()")
    list("Ctrl<Key>G"	"geHiDeleteMarker()")
    list("Ctrl<Key>H"	"MShiToggleWindowEnv(hiGetCurrentWindow() 'dynamicHilightOn '(t nil))")
    list("Ctrl<Key>I"	"MTleSetInstMatchPoint()")
    list("Ctrl<Key>J"	"MTleCrossHilite(\"deselect\")")
    list("Ctrl<Key>KP_1"	"geScroll(nil \"sw\" t)")
    list("Ctrl<Key>KP_3"	"geScroll(nil \"se\" t)")
    list("Ctrl<Key>KP_5"	"geScroll(nil \"\" t)")
    list("Ctrl<Key>KP_7"	"geScroll(nil \"nw\" t)")
    list("Ctrl<Key>KP_9"	"geScroll(nil \"ne\" t)")
    list("Ctrl<Key>KP_Begin"	"geScroll(nil \"\" t)")
    list("Ctrl<Key>KP_End"	"geScroll(nil \"sw\" t)")
    list("Ctrl<Key>KP_Home"	"geScroll(nil \"nw\" t)")
    list("Ctrl<Key>KP_Page_Down"	"geScroll(nil \"se\" t)")
    list("Ctrl<Key>KP_Page_Up"	"geScroll(nil \"ne\" t)")
    list("Ctrl<Key>Left"	"geScroll(nil \"w\" t)")
    list("Ctrl<Key>M"	"MTleSetMatchPoint()")
    list("Ctrl<Key>O"	"schHiGridOptions()")
    list("Ctrl<Key>P"	"schHiCreatePin()")
    list("Ctrl<Key>Q"	"MScdfCellEdit()")
    list("Ctrl<Key>R"	""	"schSetEnv(\"upsideDown\" t)")
    list("Ctrl<Key>Right"	"geScroll(nil \"e\" t)")
    list("Ctrl<Key>S"	"MSgeSaveAs()")
    list("Ctrl<Key>T"	"MSutSlibConv(geGetEditCellView()~>libName geGetEditCellView()~>cellName)")
    list("Ctrl<Key>Tab"	"hiUpdateMagOptions()")
    list("Ctrl<Key>U"	"vicSimWaveSendDisplayMsg(car(vicSimWaveGetSignalsSelected()) strcat(simRunDir \"/shmDir/shm.db\"))")
    list("Ctrl<Key>Up"	"geScroll(nil \"n\" t)")
    list("Ctrl<Key>V"	"cid = ipcBeginProcess(\"xclip -selection clipboard -o | sed 's/test.top.IFullcube.//'\") ipcWait(cid 5 10)  MTschDescendToPathString() _MT_DESCENDTOPATH_FORM->hierPath->value=ipcReadProcess(cid)  hiFormDone(_MT_DESCENDTOPATH_FORM)  ipcKillProcess(cid)")
    list("Ctrl<Key>W"	"MSsimWaveOpen()")
    list("Ctrl<Key>X"	"MSschHiCheckAndSave()")
    list("Ctrl<Key>Z"	"hiZoomOut()")
    list("Ctrl<Key>["	"MMJseProbeClkPath( )")
    list("Ctrl<Key>]"	"MMJseProbeClkPathRemoveAll( )")
    list("Ctrl<Key>`"	"MSTseSetAsMstNotes(nil nil t)")
    list("Ctrl<Key>space"	"MSTgeOpenOtherView()")
    list("CtrlAlt<Key>M"	"MSsiSelectMismatchPairs()")
    list("None<Btn1Down>"	"MSleEchoMouseSel()"	"mouseAddPt()")
    list("None<Btn1Down>(2)"	"schHiDefaultAction()"	"schMouseApplyOrFinish()")
    list("None<Btn2Down>"	"schHiMousePopUp()"	"schHiMousePopUp()")
    list("None<Btn2Down>(2)"	"schHiObjectProperty()"	"hiToggleEnterForm()")
    list("None<Btn3Down>"	"hiRepeat()"	"schCmdOption()")
    list("None<Btn3Down>(2)"	""	"hiToggleEnterForm()")
  list("None<Btn4Down>"	"hiZoomWindowAtMouse(hiGetCurrentWindow() 0.5)")
  list("None<Btn5Down>"	"hiZoomWindowAtMouse(hiGetCurrentWindow() 1.75)"	"geScroll(nil \"n\" nil)")
    list("Return"	"hiRedraw()"	"mouseApplyOrFinishPoint()")
    list("Shift<Btn1Down>"	"MSleEchoMouseAddSel()"	"MSleEchoMouseAddSel()")
    list("Shift<Btn1Down>(2)"	"schExtendSelectPt()")
    list("Shift<Btn2Down>"	"hiPan(hiGetCurrentWindow() hiGetCommandPoint())"	"schShiftCmdOption()")
    list("Shift<Btn3Down>"	""	"schShiftCmdOption()")
    list("Shift<Btn4Down>"	"geScroll(nil \"w\" nil)")
    list("Shift<Btn5Down>"	"geScroll(nil \"e\" nil)")
    list("Shift<DrawThru1>"	"geAddSelectBox()"	"geAddSelectBox()")
    list("Shift<DrawThru3>"	"hiZoomOut()"	"hiZoomOut()")
    list("Shift<Key>,"	"MTgeShowLockedCellViews()")
    list("Shift<Key>-"	"MSlePlusMinus(\"decrease\" \"column\")"	"MSlePlusMinus(\"decrease\" \"column\")")
    list("Shift<Key>0"	"MSittsimUTProbeNet( \"delete\")")
    list("Shift<Key>1"	"hiDynamicPanInteractive(hiGetCurrentWindow())")
    list("Shift<Key>3"	"foreach( l setof(lyr MSdbGetValidLibLayers(geGetEditCellView()~>lib)  (lyr~>number >= 207) ) l~>visible = t) hiRedraw()")
    list("Shift<Key>4"	"MSTseReportSelSymPinNum()")
    list("Shift<Key>8"	"MSseWireSymbol(?wireType \"wire\" ?side \"left\")")
    list("Shift<Key>9"	"MSittsimUTProbeNet( \"add\")")
    list("Shift<Key>="	"MSlePlusMinus(\"increase\" \"column\")"	"MSlePlusMinus(\"increase\" \"column\")")
    list("Shift<Key>A"	"geSingleSelectBox()")
    list("Shift<Key>B"	"MSgeAscend(0)")
    list("Shift<Key>C"	"MSTschAutoCreateLabel()")
    list("Shift<Key>D"	"geSubSelectBox()")
    list("Shift<Key>Delete"	"schHiIgnore()")
    list("Shift<Key>E"	"MSgeDescend(\"EDIT\")")
    list("Shift<Key>F"	"hiGetCurrentWindow()->stopLevel = dbGetMaxHierDepth() ")
    list("Shift<Key>F1"	"mycv() when(geGetSelSet() mysel())")
    list("Shift<Key>F11"	"deToggleAssistants() deToggleToolbars()")
    list("Shift<Key>F4"	"geToggleAreaSelectOption()")
    list("Shift<Key>F7"	"geHiDeleteMarker()")
    list("Shift<Key>G"	"MSleSnapGrid()")
    list("Shift<Key>H"	"schHiHiliteLabel(\"wire\" \"off\")")
    list("Shift<Key>I"	"MSdbShowUnsetMatchPoints()")
    list("Shift<Key>J"	"MSdbCrossProbeMult(geGetSelSet())")
    list("Shift<Key>K"	"leClearAllRuler(geGetEditCellView())")
    list("Shift<Key>L"	"ddsOpenLibManager()")
    list("Shift<Key>M"	"schHiMove()")
    list("Shift<Key>N"	"schHiCreateNoteLabel()")
    list("Shift<Key>O"	"schHiEditorOptions()")
    list("Shift<Key>Q"	"schHiCellViewProperty()"	"schHiCellViewProperty()")
    list("Shift<Key>R"	"MSTdvschReplaceLabels()"	"schSetEnv(\"sideways\" t)")
    list("Shift<Key>S"	"MSgeSave()")
    list("Shift<Key>T"	"MTleHiTree()")
    list("Shift<Key>Tab"	"hiToggleAnchorMagnifier()")
    list("Shift<Key>U"	"MSittsimUTStartProcess(?preLoadChipExpectData t)")
    list("Shift<Key>V"	"_deToggleAssistant(\"World View\")")
    list("Shift<Key>W"	"schHiCreateWire(getCurrentWindow()->pathWidth)")
    list("Shift<Key>X"	"MTschCrossProbeLay()")
    list("Shift<Key>Z"	"hiPrevWinView(hiGetCurrentWindow())")
    list("Shift<Key>`"	"MSTseSetAsMstNotes(nil t)")
    list("ShiftCtrl<Key>3"	"MHYDseDCOpAnnotateAll()")
    list("ShiftCtrl<Key>4"	"MHYDseDCOpDeleteAnnotation()")
    list("ShiftCtrl<Key>5"	"MHYDseDCOpAnnotateSelected()")
    list("ShiftCtrl<Key>D"	"MSgeHiDisplaySaveHistory()")
    list("ShiftCtrl<Key>G"	"MHYDseToggleAnnotateDCOpMode()")
    list("ShiftCtrl<Key>L"	"MSdvToggleWarnToHighlight()")
    list("ShiftCtrl<Key>R"	"MSTfpPulsicXprobe()")
    list("ShiftCtrl<Key>`"	"MSTseNotesDisplayToggle()")
    list("Super<Btn2Down>"	"MST_siVccCrossProbe2Undertow()")
    list("Super<Btn3Down>"	"if(hiGetCIWindow()->infix then MSTittsimUTProbeBusNets(\"add\") else hiGetCIWindow()->infix=t errset(MSTittsimUTProbeBusNets(\"add\") t) hiGetCIWindow()->infix=nil)")
    list("Super<Key>-"	"MSlePlusMinus(\"decrease\" \"row\" \"space\")"	"MSlePlusMinus(\"decrease\" \"row\" \"space\")")
    list("Super<Key>3"	"MSTleSelSchObjectInLayout()")
    list("Super<Key>8"	"MSgeCreatePinsFromNets(\"input\")")
    list("Super<Key>9"	"MSgeCreatePinsFromNets(\"output\")")
    list("Super<Key>="	"MSlePlusMinus(\"increase\" \"row\" \"space\")"	"MSlePlusMinus(\"increase\" \"row\" \"space\")")
    list("Super<Key>A"	"MSseProbe(?shortDevs t)")
    list("Super<Key>B"	"MSgeHierarchyJump()")
    list("Super<Key>C"	"hiCloseWindow(hiGetCurrentWindow())")
    list("Super<Key>D"	"MSseDeleteProbe(?shortDevs t)")
    list("Super<Key>E"	"MSschToggleEnv(\"descendTarget\" list(\"use viewNameList\" \"query user\"))")
    list("Super<Key>F1"	"MSTlxMapZoomSelInWindow()")
    list("Super<Key>F2"	"MSTlxMapGetFromWindow()")
    list("Super<Key>F9"	"MSTprobeSelectedNets(t)")
    list("Super<Key>G"	"MSseDeleteProbe(?shortDevs t)")
    list("Super<Key>I"	"MSdbClearMatchPointHilite()")
    list("Super<Key>J"	"MSgeFanoutNetC()")
    list("Super<Key>P"	"MSgeProbe()")
    list("Super<Key>Q"	"MTdbComment()")
    list("Super<Key>R"	"MTgeChangeEditMode(\"r\")")
    list("Super<Key>S"	"MSTseCommentSaveFormDisplay()")
    list("Super<Key>T"	"MSsiUnprobeTerm()")
    list("Super<Key>`"	"MSTseMstNotesBrowser()")
    list("Super<Key>space"	"lxLaunchLayoutXL()")
    list("shift<Key>P"	"schHiCreateInst(CONST.SLIB \"probe\" \"symbol\")")

    ;; Empty bindkeys (typically inserted when a bindkey is redefined or deleted)
    list("<Key>!"	"")
    list("<Key>#"	"")
    list("<Key>$"	"")
    list("<Key>*"	"")
    list("<Key>+"	"")
    list("<Key>:"	"")
    list("<Key>?"	"")
    list("<Key>@"	"")
    list("<Key>L2"	"")
    list("<Key>L4"	"")
    list("<Key>L6"	"")
    list("<Key>R11"	"")
    list("<Key>R13"	"")
    list("<Key>R15"	"")
    list("<Key>R4"	"")
    list("<Key>R5"	"")
    list("<Key>R6"	"")
    list("<Key>R7"	"")
    list("<Key>R9"	"")
    list("<Key>_"	"")
    list("<Key>{"	"")
    list("<Key>|"	"")
    list("<Key>}"	"")
    list("<Key>~"	"")
    list("Alt<Key>!"	"")
    list("Alt<Key>#"	"")
    list("Alt<Key>$"	"")
    list("Alt<Key>%"	"")
    list("Alt<Key>&"	"")
    list("Alt<Key>("	"")
    list("Alt<Key>)"	"")
    list("Alt<Key>*"	"")
    list("Alt<Key>+"	"")
    list("Alt<Key>:"	"")
    list("Alt<Key>?"	"")
    list("Alt<Key>@"	"")
    list("Alt<Key>Down"	"")
    list("Alt<Key>Left"	"")
    list("Alt<Key>R11"	"")
    list("Alt<Key>R13"	"")
    list("Alt<Key>R15"	"")
    list("Alt<Key>R4"	"")
    list("Alt<Key>R5"	"")
    list("Alt<Key>R6"	"")
    list("Alt<Key>R7"	"")
    list("Alt<Key>R9"	"")
    list("Alt<Key>Right"	"")
    list("Alt<Key>Up"	"")
    list("Alt<Key>^"	"")
    list("Alt<Key>_"	"")
    list("Alt<Key>{"	"")
    list("Alt<Key>|"	"")
    list("Alt<Key>}"	"")
    list("Alt<Key>~"	"")
    list("Ctrl<Key>!"	"")
    list("Ctrl<Key>#"	"")
    list("Ctrl<Key>$"	"")
    list("Ctrl<Key>%"	"")
    list("Ctrl<Key>&"	"")
    list("Ctrl<Key>("	"")
    list("Ctrl<Key>)"	"")
    list("Ctrl<Key>*"	"")
    list("Ctrl<Key>+"	"")
    list("Ctrl<Key>:"	"")
    list("Ctrl<Key>?"	"")
    list("Ctrl<Key>@"	"")
    list("Ctrl<Key>R11"	"")
    list("Ctrl<Key>R13"	"")
    list("Ctrl<Key>R15"	"")
    list("Ctrl<Key>R4"	"")
    list("Ctrl<Key>R5"	"")
    list("Ctrl<Key>R6"	"")
    list("Ctrl<Key>R7"	"")
    list("Ctrl<Key>R9"	"")
    list("Ctrl<Key>^"	"")
    list("Ctrl<Key>_"	"")
    list("Ctrl<Key>{"	"")
    list("Ctrl<Key>|"	"")
    list("Ctrl<Key>}"	"")
    list("Ctrl<Key>~"	"")
    list("CtrlAlt<Key>!"	"")
    list("CtrlAlt<Key>#"	"")
    list("CtrlAlt<Key>$"	"")
    list("CtrlAlt<Key>%"	"")
    list("CtrlAlt<Key>&"	"")
    list("CtrlAlt<Key>("	"")
    list("CtrlAlt<Key>)"	"")
    list("CtrlAlt<Key>*"	"")
    list("CtrlAlt<Key>+"	"")
    list("CtrlAlt<Key>:"	"")
    list("CtrlAlt<Key>?"	"")
    list("CtrlAlt<Key>@"	"")
    list("CtrlAlt<Key>Down"	"")
    list("CtrlAlt<Key>Left"	"")
    list("CtrlAlt<Key>R11"	"")
    list("CtrlAlt<Key>R13"	"")
    list("CtrlAlt<Key>R15"	"")
    list("CtrlAlt<Key>R4"	"")
    list("CtrlAlt<Key>R5"	"")
    list("CtrlAlt<Key>R6"	"")
    list("CtrlAlt<Key>R7"	"")
    list("CtrlAlt<Key>R9"	"")
    list("CtrlAlt<Key>Right"	"")
    list("CtrlAlt<Key>Up"	"")
    list("CtrlAlt<Key>^"	"")
    list("CtrlAlt<Key>_"	"")
    list("CtrlAlt<Key>{"	"")
    list("CtrlAlt<Key>|"	"")
    list("CtrlAlt<Key>}"	"")
    list("CtrlAlt<Key>~"	"")
    list("Shift<Key>!"	"")
    list("Shift<Key>#"	"")
    list("Shift<Key>$"	"")
    list("Shift<Key>%"	"")
    list("Shift<Key>&"	"")
    list("Shift<Key>("	"")
    list("Shift<Key>)"	"")
    list("Shift<Key>*"	"")
    list("Shift<Key>+"	"")
    list("Shift<Key>:"	"")
    list("Shift<Key>?"	"")
    list("Shift<Key>@"	"")
    list("Shift<Key>Down"	"")
    list("Shift<Key>Left"	"")
    list("Shift<Key>R11"	"")
    list("Shift<Key>R13"	"")
    list("Shift<Key>R15"	"")
    list("Shift<Key>R4"	"")
    list("Shift<Key>R5"	"")
    list("Shift<Key>R6"	"")
    list("Shift<Key>R7"	"")
    list("Shift<Key>R9"	"")
    list("Shift<Key>Right"	"")
    list("Shift<Key>Up"	"")
    list("Shift<Key>^"	"")
    list("Shift<Key>_"	"")
    list("Shift<Key>{"	"")
    list("Shift<Key>|"	"")
    list("Shift<Key>}"	"")
    list("Shift<Key>~"	"")
    list("ShiftCtrl<Key>!"	"")
    list("ShiftCtrl<Key>#"	"")
    list("ShiftCtrl<Key>$"	"")
    list("ShiftCtrl<Key>%"	"")
    list("ShiftCtrl<Key>&"	"")
    list("ShiftCtrl<Key>("	"")
    list("ShiftCtrl<Key>)"	"")
    list("ShiftCtrl<Key>*"	"")
    list("ShiftCtrl<Key>+"	"")
    list("ShiftCtrl<Key>:"	"")
    list("ShiftCtrl<Key>?"	"")
    list("ShiftCtrl<Key>@"	"")
    list("ShiftCtrl<Key>Left"	"")
    list("ShiftCtrl<Key>R11"	"")
    list("ShiftCtrl<Key>R13"	"")
    list("ShiftCtrl<Key>R15"	"")
    list("ShiftCtrl<Key>R4"	"")
    list("ShiftCtrl<Key>R5"	"")
    list("ShiftCtrl<Key>R6"	"")
    list("ShiftCtrl<Key>R7"	"")
    list("ShiftCtrl<Key>R9"	"")
    list("ShiftCtrl<Key>Right"	"")
    list("ShiftCtrl<Key>^"	"")
    list("ShiftCtrl<Key>_"	"")
    list("ShiftCtrl<Key>{"	"")
    list("ShiftCtrl<Key>|"	"")
    list("ShiftCtrl<Key>}"	"")
    list("ShiftCtrl<Key>~"	"")
    list("Super<Key>!"	"")
    list("Super<Key>#"	"")
    list("Super<Key>$"	"")
    list("Super<Key>%"	"")
    list("Super<Key>&"	"")
    list("Super<Key>("	"")
    list("Super<Key>)"	"")
    list("Super<Key>*"	"")
    list("Super<Key>+"	"")
    list("Super<Key>:"	"")
    list("Super<Key>?"	"")
    list("Super<Key>@"	"")
    list("Super<Key>Down"	"")
    list("Super<Key>Left"	"")
    list("Super<Key>R11"	"")
    list("Super<Key>R13"	"")
    list("Super<Key>R15"	"")
    list("Super<Key>R4"	"")
    list("Super<Key>R5"	"")
    list("Super<Key>R6"	"")
    list("Super<Key>R7"	"")
    list("Super<Key>R9"	"")
    list("Super<Key>Right"	"")
    list("Super<Key>Up"	"")
    list("Super<Key>^"	"")
    list("Super<Key>_"	"")
    list("Super<Key>{"	"")
    list("Super<Key>|"	"")
    list("Super<Key>}"	"")
    list("Super<Key>~"	"")
)) ;; hiSetBindKeys
;;-----------------------------------------------------------------------------

